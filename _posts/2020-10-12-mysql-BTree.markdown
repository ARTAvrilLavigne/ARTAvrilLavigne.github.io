---
layout:     post
title:      "mysql的索引数据结构"
subtitle:   " \"welcome to ARTAvrilLavigne Blog\""
date:       2020-10-12 21:34:00
author:     "ARTAvrilLavigne"
header-img: "img/post-bg-2015.jpg"
tags:
    - mysql
---
## 一、mysql索引<br>

### 1.1、数据结构<br>

　　**MySQL的索引使用B+树作为数据结构，而不是B树。**原因如下：<br>
* B+树的磁盘读写代价更低：B+树的内部节点并没有指向关键字具体信息的指针，因此其内部节点相对B树更小，如果把所有同一内部节点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多，一次性读入内存的需要查找的关键字也就越多，相对IO读写次数就降低了。<br>

* B+树的查询效率更加稳定：由于非终结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。<br>

* B+树更便于遍历：由于B+树的数据都存储在叶子结点中，分支结点均为索引，方便扫库，只需要扫一遍叶子结点即可，但是B树因为其分支结点同样存储着数据，我们要找到具体的数据，需要进行一次中序遍历按序来扫，所以B+树更加适合在区间查询的情况，所以通常B+树用于数据库索引。<br>

* B+树更适合基于范围的查询：B树在提高了IO性能的同时并没有解决元素遍历的效率低下问题，正是为了解决这个问题，B+树应用而生。B+树只需要去遍历叶子节点就可以实现整棵树的遍历。而且在数据库中基于范围的查询是非常频繁的，而B树不支持这样的操作或者说效率太低。<br>

  



## 参考文献<br>
[1]https://www.jianshu.com/p/7ce804f97967<br>
[2]https://www.jianshu.com/p/9e9aca844c13<br>
[3]https://www.cnblogs.com/xiaoxi/p/6868087.html<br>
